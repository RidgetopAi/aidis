# AIDIS MCP Architecture - Tool Flow Diagram

## CURRENT ARCHITECTURE (Why The Problem Exists)

┌─────────────────────────────────────────────────────────────────────────────┐
│                              CLAUDE CODE DESKTOP                            │
│                                                                             │
│  User types: aidis_ping, context_store, etc.                               │
│  Sees: 49 tools at ~27.5k tokens in /context menu                          │
└────────────────────────────────┬────────────────────────────────────────────┘
                                 │
                                 │ MCP STDIO Protocol
                                 │ (stdin/stdout JSON-RPC)
                                 ↓
┌─────────────────────────────────────────────────────────────────────────────┐
│                      CLAUDE-HTTP-MCP-BRIDGE.JS                              │
│                       (Node.js MCP STDIO Server)                            │
│                                                                             │
│  Location: /home/ridgetop/aidis/claude-http-mcp-bridge.js                  │
│  Process: Spawned by Claude Code as child process                          │
│                                                                             │
│  ┌───────────────────────────────────────────────────────────────────┐     │
│  │ Lines 34-111: Hardcoded Tool Array                               │     │
│  │                                                                   │     │
│  │ const AIDIS_TOOLS = [                                            │     │
│  │   { name: 'aidis_ping', ... },        // ✅ Correct              │     │
│  │   { name: 'aidis_status', ... },      // ✅ Correct              │     │
│  │   // ... 38 correct tools ...                                    │     │
│  │   { name: 'code_analyze', ... },      // ❌ SHOULD BE DISABLED   │     │
│  │   { name: 'code_components', ... },   // ❌ SHOULD BE DISABLED   │     │
│  │   // ... 11 disabled tools that shouldn't be here ...            │     │
│  │   // ❌ MISSING: aidis_help, aidis_explain, aidis_examples       │     │
│  │ ];                                                                │     │
│  │                                                                   │     │
│  │ Total: 49 tools (38 correct + 11 disabled - 3 missing = 46?)     │     │
│  │ Actually: 49 tools in current file                               │     │
│  └───────────────────────────────────────────────────────────────────┘     │
│                                                                             │
│  ┌───────────────────────────────────────────────────────────────────┐     │
│  │ Lines 168-179: ListToolsRequestSchema Handler                    │     │
│  │                                                                   │     │
│  │ server.setRequestHandler(ListToolsRequestSchema, async () => {   │     │
│  │   return {                                                        │     │
│  │     tools: AIDIS_TOOLS.map(tool => ({                            │     │
│  │       name: tool.name,                                            │     │
│  │       description: tool.description,                              │     │
│  │       inputSchema: { ... }                                        │     │
│  │     }))                                                           │     │
│  │   };                                                              │     │
│  │ });                                                               │     │
│  │                                                                   │     │
│  │ → Returns hardcoded array to Claude Code ❌                       │     │
│  │ → Never queries server for current tool list                     │     │
│  └───────────────────────────────────────────────────────────────────┘     │
│                                                                             │
│  ┌───────────────────────────────────────────────────────────────────┐     │
│  │ Lines 116-165: callAidisHttp Function                            │     │
│  │                                                                   │     │
│  │ function callAidisHttp(toolName, args) {                          │     │
│  │   // Makes HTTP POST to localhost:8080/mcp/tools/{toolName}      │     │
│  │   // Proxies tool execution to actual AIDIS server               │     │
│  │ }                                                                 │     │
│  │                                                                   │     │
│  │ → Tool execution works correctly ✅                               │     │
│  │ → Only tool LISTING is broken                                    │     │
│  └───────────────────────────────────────────────────────────────────┘     │
└────────────────────────────────┬────────────────────────────────────────────┘
                                 │
                                 │ HTTP POST Requests
                                 │ localhost:8080/mcp/tools/{toolName}
                                 ↓
┌─────────────────────────────────────────────────────────────────────────────┐
│                         AIDIS MCP SERVER (CORRECT)                          │
│                      (Node.js HTTP + MCP STDIO Server)                      │
│                                                                             │
│  Location: /home/ridgetop/aidis/mcp-server/src/server.ts                   │
│  Process: Started via npx tsx src/server.ts                                │
│  Ports: 8080 (HTTP), stdio (MCP)                                           │
│                                                                             │
│  ┌───────────────────────────────────────────────────────────────────┐     │
│  │ HTTP Server (core-server.ts)                                      │     │
│  │                                                                   │     │
│  │ GET /mcp/tools (lines 296-301):                                   │     │
│  │   const DISABLED_TOOLS = [code_*, complexity_*, git_*];           │     │
│  │   const activeTools = AIDIS_TOOL_DEFINITIONS.filter(             │     │
│  │     tool => !DISABLED_TOOLS.includes(tool.name)                   │     │
│  │   );                                                              │     │
│  │   return activeTools; // 41 tools ✅                              │     │
│  │                                                                   │     │
│  │ GET /mcp/tools/schemas (lines 328-333):                           │     │
│  │   (same filtering logic)                                          │     │
│  │   return activeTools; // 41 tools ✅                              │     │
│  │                                                                   │     │
│  │ POST /mcp/tools/{toolName}:                                       │     │
│  │   executeToolHandler(toolName, args); // Works for all tools     │     │
│  └───────────────────────────────────────────────────────────────────┘     │
│                                                                             │
│  ┌───────────────────────────────────────────────────────────────────┐     │
│  │ MCP STDIO Server (server.ts)                                      │     │
│  │                                                                   │     │
│  │ ListToolsRequestSchema Handler (lines 1069-1078):                 │     │
│  │   const DISABLED_TOOLS = [code_*, complexity_*, git_*];           │     │
│  │   return {                                                        │     │
│  │     tools: AIDIS_TOOL_DEFINITIONS.filter(                         │     │
│  │       tool => !DISABLED_TOOLS.includes(tool.name)                 │     │
│  │     )                                                             │     │
│  │   }; // 41 tools ✅                                               │     │
│  │                                                                   │     │
│  │ → Direct STDIO connection would see 41 tools                      │     │
│  │ → But Claude Code uses HTTP bridge instead                        │     │
│  └───────────────────────────────────────────────────────────────────┘     │
│                                                                             │
│  ┌───────────────────────────────────────────────────────────────────┐     │
│  │ Tool Definitions (config/toolDefinitions.ts)                      │     │
│  │                                                                   │     │
│  │ export const AIDIS_TOOL_DEFINITIONS: ToolDefinition[] = [         │     │
│  │   // 41 tools total (disabled tools already removed)              │     │
│  │   // Includes: aidis_help, aidis_explain, aidis_examples ✅       │     │
│  │ ];                                                                │     │
│  └───────────────────────────────────────────────────────────────────┘     │
└─────────────────────────────────────────────────────────────────────────────┘


## THE PROBLEM IN DIAGRAM FORM

Claude Code Desktop
    ↓ "List tools" request
Bridge (49 tools hardcoded)  ← ❌ RETURNS 49 TOOLS TO CLAUDE
    ↓ "Execute tool" request
Server (41 tools filtered)   ← ✅ EXECUTES CORRECTLY

RESULT: Claude Code sees 49 tools, but 11 don't actually exist on server!


## THE FIX IN DIAGRAM FORM

┌──────────────────────────────────────────────────────────────────┐
│  Edit: /home/ridgetop/aidis/claude-http-mcp-bridge.js           │
│                                                                  │
│  DELETE (11 tools):                                             │
│    - code_analyze, code_components, code_dependencies,          │
│      code_impact, code_stats                                    │
│    - complexity_analyze, complexity_insights,                   │
│      complexity_manage                                          │
│    - git_session_commits, git_commit_sessions,                  │
│      git_correlate_session                                      │
│                                                                  │
│  ADD (3 tools):                                                 │
│    + aidis_help, aidis_explain, aidis_examples                  │
│                                                                  │
│  RESULT: 49 - 11 + 3 = 41 tools                                 │
└──────────────────────────────────────────────────────────────────┘
    ↓
┌──────────────────────────────────────────────────────────────────┐
│  Restart Claude Code Desktop                                    │
└──────────────────────────────────────────────────────────────────┘
    ↓
┌──────────────────────────────────────────────────────────────────┐
│  Claude Code now sees: 41 tools @ ~12.3k tokens ✅               │
│  Bridge synchronized with server ✅                              │
│  Navigation tools available ✅                                   │
│  Token savings: 15,200 tokens (55%) ✅                           │
└──────────────────────────────────────────────────────────────────┘


## FUTURE STATE (DYNAMIC FETCHING)

Claude Code Desktop
    ↓ "List tools" request
Bridge (fetches from server dynamically)
    ↓ HTTP GET localhost:8080/mcp/tools
Server (41 tools filtered)
    ↑ Returns 41 tools
Bridge (stores in memory)
    ↑ Returns 41 tools to Claude Code
Claude Code (41 tools @ ~12.3k tokens) ✅

BENEFIT: Always synchronized, no manual maintenance needed


## FILE LOCATIONS

Bridge File (NEEDS UPDATE):
  /home/ridgetop/aidis/claude-http-mcp-bridge.js
  Lines 34-111: AIDIS_TOOLS array

Server Files (CORRECT):
  /home/ridgetop/aidis/mcp-server/src/server.ts
  Lines 1069-1078: STDIO handler with DISABLED_TOOLS filter

  /home/ridgetop/aidis/mcp-server/src/core-server.ts
  Lines 296-301: HTTP /mcp/tools handler
  Lines 328-333: HTTP /mcp/tools/schemas handler

  /home/ridgetop/aidis/mcp-server/src/config/toolDefinitions.ts
  Entire file: 41 tool definitions

Claude Code Config:
  /home/ridgetop/.config/claude-desktop/config.json
  Specifies: "args": ["claude-http-mcp-bridge.js"]


## VERIFICATION ENDPOINTS

HTTP Endpoints (can test with curl):
  ✅ GET  http://localhost:8080/mcp/tools
  ✅ GET  http://localhost:8080/mcp/tools/schemas
  ✅ POST http://localhost:8080/mcp/tools/aidis_ping
  ✅ POST http://localhost:8080/mcp/tools/context_store

STDIO Endpoint (only accessible via MCP client):
  ✅ Claude Code → Bridge → Server (via HTTP)
  ✅ Direct MCP client → Server (via STDIO)


## TOKEN FLOW

Before Fix:
  Claude Code Request → Bridge (49 tools × 530 tokens/tool) = 27,500 tokens
                        ↓ HTTP Proxy
                      Server (executes correctly but doesn't affect listing)

After Fix:
  Claude Code Request → Bridge (41 tools × 300 tokens/tool) = 12,300 tokens
                        ↓ HTTP Proxy
                      Server (executes correctly, listing now matches)

Token Savings: 15,200 tokens per session (55% reduction)


## IMPLEMENTATION STATUS

✅ Server: Correctly implements 41-tool optimization
✅ HTTP Endpoints: Return 41 filtered tools
❌ Bridge: Still has hardcoded 49 tools
❌ Claude Code: Still sees 49 tools at 27.5k tokens

NEXT: Update bridge file to synchronize with server (5 minutes)
