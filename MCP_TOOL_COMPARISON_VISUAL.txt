# MCP Tool Exposure Comparison - Visual Analysis

## CURRENT STATE (BROKEN)

┌─────────────────────────────────────────────────────────────────┐
│                    Claude Code Desktop                          │
│  "/context" shows: 49 tools @ ~27.5k tokens                    │
└────────────────────────┬────────────────────────────────────────┘
                         │
                         ↓ MCP STDIO Connection
┌─────────────────────────────────────────────────────────────────┐
│          claude-http-mcp-bridge.js (HARDCODED)                  │
│  Lines 34-111: const AIDIS_TOOLS = [ ... 49 tools ... ]        │
│                                                                 │
│  ✓ Has: 38 correct tools                                       │
│  ❌ Has: 11 DISABLED tools (should not be here!)               │
│  ❌ Missing: 3 navigation tools (should be here!)              │
└────────────────────────┬────────────────────────────────────────┘
                         │
                         ↓ HTTP Calls to localhost:8080
┌─────────────────────────────────────────────────────────────────┐
│              AIDIS MCP Server (CORRECT)                         │
│  core-server.ts: DISABLED_TOOLS filter applied                 │
│  server.ts: DISABLED_TOOLS filter applied                      │
│                                                                 │
│  ✓ Returns: 41 tools @ ~12.3k tokens                          │
│  ✓ Filters: 11 disabled tools removed                         │
│  ✓ Includes: 3 navigation tools added                         │
└─────────────────────────────────────────────────────────────────┘

PROBLEM: Bridge bypasses server optimization with hardcoded array!


## DESIRED STATE (FIXED)

┌─────────────────────────────────────────────────────────────────┐
│                    Claude Code Desktop                          │
│  "/context" shows: 41 tools @ ~12.3k tokens ✅                 │
└────────────────────────┬────────────────────────────────────────┘
                         │
                         ↓ MCP STDIO Connection
┌─────────────────────────────────────────────────────────────────┐
│      claude-http-mcp-bridge.js (FIXED - SYNCHRONIZED)          │
│  Lines 34-111: const AIDIS_TOOLS = [ ... 41 tools ... ]        │
│                                                                 │
│  ✓ Has: 38 correct tools                                       │
│  ✓ Has: 3 navigation tools (aidis_help, explain, examples)     │
│  ✅ Removed: 11 disabled tools (code_*, git_*, complexity_*)   │
└────────────────────────┬────────────────────────────────────────┘
                         │
                         ↓ HTTP Calls to localhost:8080
┌─────────────────────────────────────────────────────────────────┐
│              AIDIS MCP Server (CORRECT)                         │
│  core-server.ts: DISABLED_TOOLS filter applied                 │
│  server.ts: DISABLED_TOOLS filter applied                      │
│                                                                 │
│  ✓ Returns: 41 tools @ ~12.3k tokens                          │
│  ✓ Filters: 11 disabled tools removed                         │
│  ✓ Includes: 3 navigation tools added                         │
└─────────────────────────────────────────────────────────────────┘

SOLUTION: Bridge synchronized with server tool list!


## TOOL BREAKDOWN

┌───────────────────────┬─────────┬─────────┬──────────┐
│      Tool Group       │ Server  │ Bridge  │  Status  │
├───────────────────────┼─────────┼─────────┼──────────┤
│ System Health         │    2    │    2    │    ✅    │
│ Navigation            │    3    │    0    │    ❌    │ ← MISSING!
│ Context Management    │    4    │    4    │    ✅    │
│ Project Management    │    6    │    6    │    ✅    │
│ Session Management    │    5    │    5    │    ✅    │
│ Naming Registry       │    4    │    4    │    ✅    │
│ Technical Decisions   │    4    │    4    │    ✅    │
│ Task Management       │    6    │    6    │    ✅    │
│ Code Analysis         │    0    │    5    │    ❌    │ ← SHOULD BE 0!
│ Smart Search & AI     │    2    │    2    │    ✅    │
│ Code Complexity       │    0    │    3    │    ❌    │ ← SHOULD BE 0!
│ Development Metrics   │    3    │    3    │    ✅    │
│ Pattern Detection     │    2    │    2    │    ✅    │
│ Git Integration       │    0    │    3    │    ❌    │ ← SHOULD BE 0!
├───────────────────────┼─────────┼─────────┼──────────┤
│ TOTAL                 │   41    │   49    │  BROKEN  │
└───────────────────────┴─────────┴─────────┴──────────┘


## EXACT TOOL DIFFERENCES

Tools in BRIDGE but NOT in SERVER (Remove These):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.  ❌ code_analyze
2.  ❌ code_components  
3.  ❌ code_dependencies
4.  ❌ code_impact
5.  ❌ code_stats
6.  ❌ complexity_analyze
7.  ❌ complexity_insights
8.  ❌ complexity_manage
9.  ❌ git_session_commits
10. ❌ git_commit_sessions
11. ❌ git_correlate_session

Tools in SERVER but NOT in BRIDGE (Add These):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. ✅ aidis_help
2. ✅ aidis_explain
3. ✅ aidis_examples


## TOKEN IMPACT

Current (Broken):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
49 tools × ~530 tokens/tool (unoptimized) = ~27,500 tokens
                                            └──────────┘
                                              WASTED!

After Fix (Optimized):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
41 tools × ~300 tokens/tool (optimized) = ~12,300 tokens
                                           └──────────┘
                                             SAVED!

TOKEN SAVINGS: 15,200 tokens (55% reduction)


## IMPLEMENTATION TIME

Solution 1 (Quick Fix):
┌─────────────────────────────────────────┐
│ Delete 11 tool definitions   →  2 min   │
│ Add 3 tool definitions       →  1 min   │
│ Restart Claude Code          →  1 min   │
│ Verify tool count            →  1 min   │
├─────────────────────────────────────────┤
│ TOTAL TIME:                     5 min   │
└─────────────────────────────────────────┘

Solution 2 (Dynamic Fetch):
┌─────────────────────────────────────────┐
│ Write dynamic fetch code     → 10 min   │
│ Update main() function       →  5 min   │
│ Test & debug                 → 10 min   │
│ Restart & verify             →  5 min   │
├─────────────────────────────────────────┤
│ TOTAL TIME:                    30 min   │
└─────────────────────────────────────────┘

RECOMMENDATION: Do Solution 1 NOW (5 min), then Solution 2 later for maintainability.
