# AIDIS Configuration Template
# Copy this file to create environment-specific configurations:
# - .env.development
# - .env.staging
# - .env.production

# =======================
# REQUIRED IN PRODUCTION
# =======================

# Database Configuration
DATABASE_USER=ridgetop
DATABASE_HOST=localhost
DATABASE_NAME=aidis_production
DATABASE_PASSWORD=your-secure-database-password
DATABASE_PORT=5432

# Authentication Secrets
JWT_SECRET=your-secure-jwt-secret-key-minimum-32-characters
JWT_EXPIRES_IN=24h
BCRYPT_ROUNDS=12

# =======================
# SERVICE CONFIGURATION
# =======================

# Server Ports (0 = dynamic assignment, specific number = fixed port)
# Dynamic Port Assignment: Set to 0 to let the OS assign available ports
# Fixed Port Assignment: Set to specific port number for traditional behavior
AIDIS_MCP_PORT=0
AIDIS_MCP_BRIDGE_PORT=0
AIDIS_COMMAND_DEV_PORT=0
AIDIS_COMMAND_PROD_PORT=0

# Legacy Environment Variables (for backward compatibility)
# These will be used if the AIDIS_* variables above are not set
# AIDIS_HEALTH_PORT=8080  # For MCP server health endpoints
# PORT=5000               # For Command backend

# Environment Type
NODE_ENV=development

# =======================
# SECURITY & CORS
# =======================

# CORS Origins (comma-separated)
CORS_ORIGIN=http://localhost:3000,http://localhost:3001

# =======================
# LOGGING CONFIGURATION
# =======================

LOG_LEVEL=info
DB_LOG_LEVEL=warn
ENABLE_LOG_ROTATION=true
LOG_MAX_FILE_SIZE=20m
LOG_MAX_FILES=30d

# =======================
# FEATURE FLAGS
# =======================

# Phase 1 Features
FEATURE_FLAG_PHASE1_FEATURE_FLAGS=false
FEATURE_FLAG_PHASE1_CONTRACT_TESTS=false
FEATURE_FLAG_PHASE1_REACT_ERROR_BOUNDARIES=false

# =======================
# EXTERNAL SERVICES
# =======================

# Optional: External secrets management
# VAULT_URL=https://vault.example.com
# AWS_SSM_PARAMETER_PREFIX=/aidis/

# Optional: Monitoring & Analytics
# SENTRY_DSN=https://your-sentry-dsn
# DATADOG_API_KEY=your-datadog-key